Max Circular Subarray Sum
medium
asked in interviews by 1 company
Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
Given an array arr[] of N integers arranged in a circular fashion. Your task is to find the maximum contiguous subarray sum containing at least 1 element.
Input
The first line of input contains a single integer T which denotes the number of test cases. The first line of each test case contains a single integer N which denotes the total number of elements. The second line of each test case contains N space-separated integers denoting the elements of the array.

Constraints:
1 <= T <= 100
1 <= N <= 10^5
-10^6 <= Arr[i] <= 10^6

The Sum of N over all test cases is less than equal to 10^6.
Output
For each test case print the maximum sum obtained by adding the consecutive elements.
Example
Input:
4
7
8 -8 9 -9 10 -11 12
8
10 -3 -4 7 6 5 -4 -1
8
-1 40 -14 7 6 5 -4 -1
4
-1 -2 -3 -4

Output:
22
23
52
-1

Explanation:
Testcase 1: Starting from the last element of the array, i.e, 12, and moving in a circular fashion, we have max subarray as 12, 8, -8, 9, -9, 10, which gives the maximum sum as 22.

===============================================================================

import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
	public static int maxSumCircularSubarray(int arr[]) 
	{
        int maxEnd = arr[0], maxValue = arr[0];
        int minEnd = arr[0], minValue = arr[0];
        int sum = arr[0];
		for(int i = 1; i < arr.length; i++)
        {
            maxEnd = Math.max(arr[i], maxEnd + arr[i]);
            maxValue = Math.max(maxEnd, maxValue);
            minEnd = Math.min(arr[i], minEnd + arr[i]);
            minValue = Math.min(minEnd, minValue);
            sum += arr[i]; 
        }
        if(minValue == sum)
        {
            return maxValue;
        }
        return Math.max(sum - minValue, maxValue);
	}

    public static void main (String[] args) throws IOException {
        // Your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int  t = Integer.parseInt(br.readLine());
        while (t-->0) 
        {
            String str[] = br.readLine().trim().split(" ");
            int n = Integer.parseInt(str[0]);
            String str2[] = br.readLine().trim().split(" ");
            int[] arr = new int[n];
            for (int i = 0; i < n; i++)
            {
                arr[i] =Integer.parseInt(str2[i]);
            }
            System.out.println(maxSumCircularSubarray(arr));
        }      
    }
}
